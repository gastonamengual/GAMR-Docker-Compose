services:
  streamlit-client:
    build: ./client-ui
    depends_on:
      - backend-service-api
    ports:
      - "8501:8501"
    environment:
      - LOCAL_BASE_URL=http://backend-service-api:8080
    secrets:
      - USERNAME_API
      - RENDER_DOCKER_BASE_URL
      - VERCEL_BASE_URL
    networks:
      - gamr-network

  backend-service-api:
    build: ./backend-service-api
    depends_on:
      - flower-model-service
    ports:
      - "8080:8080"
    environment:
      - FLOWER_API_BASE_URL=http://flower-model-service:5001
    secrets:
      - RENDER_API_TOKEN
      - JWT_KEY
      - JWT_ALGORITHM
      - PROJECT_ID
      - PRIVATE_KEY_ID
      - PRIVATE_KEY
      - CLIENT_EMAIL
      - CLIENT_ID
    networks:
      - gamr-network

  flower-model-service:
    build: ./model-service-flowers
    depends_on:
      - mlflow-server
    ports:
      - "5001:5001"
    environment:
      - MODEL_TRACKING_URI=http://mlflow-server:5005
    networks:
      - gamr-network

  mlflow-server:
    build: ./mlflow-server
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - MLFLOW_TRACKING_URI=postgresql://mlflow_user:mlflow_password@postgres:5432/mlflow_db
    ports:
      - "5005:5005"
    volumes:
      - mlflow-artifacts:/mlflow/artifacts
    restart: always
    networks:
      - gamr-network
  
  postgres:
    image: postgres:17
    environment:
      - POSTGRES_USER=mlflow_user
      - POSTGRES_PASSWORD=mlflow_password
      - POSTGRES_DB=mlflow_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d mlflow_db -U mlflow_user"]
      interval: 10s
      retries: 5
    ports:
      - "5432:5432"
    restart: always
    networks:
      - gamr-network

  prometheus:
    container_name: prometheus
    depends_on:
      - streamlit-client
      - backend-service-api
      - flower-model-service
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - gamr-network

  grafana:
    depends_on:
      - prometheus
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - gamr-network

networks:
  gamr-network:
    driver: bridge

volumes:
  mlflow-artifacts:
  postgres-data:
  grafana-data:

secrets:
    USERNAME_API:
      file: ./client-ui/secrets/USERNAME_API
    RENDER_DOCKER_BASE_URL:
      file: ./client-ui/secrets/RENDER_DOCKER_BASE_URL
    VERCEL_BASE_URL:
      file: ./client-ui/secrets/VERCEL_BASE_URL
    RENDER_API_TOKEN:
      file: ./backend-service-api/secrets/RENDER_API_TOKEN
    JWT_KEY:
      file: ./backend-service-api/secrets/JWT_KEY
    JWT_ALGORITHM:
      file: ./backend-service-api/secrets/JWT_ALGORITHM
    PROJECT_ID:
      file: ./backend-service-api/secrets/PROJECT_ID
    PRIVATE_KEY_ID:
      file: ./backend-service-api/secrets/PRIVATE_KEY_ID
    PRIVATE_KEY:
      file: ./backend-service-api/secrets/PRIVATE_KEY
    CLIENT_EMAIL:
      file: ./backend-service-api/secrets/CLIENT_EMAIL
    CLIENT_ID:
      file: ./backend-service-api/secrets/CLIENT_ID
